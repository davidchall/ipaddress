# Generated by roxygen2: do not edit by hand

S3method(as.character,ip_address)
S3method(as.character,ip_network)
S3method(format,ip_address)
S3method(format,ip_network)
S3method(ip_network,default)
S3method(ip_network,ip_address)
S3method(vec_cast,ip_address)
S3method(vec_cast,ip_network)
S3method(vec_cast.character,ip_address)
S3method(vec_cast.character,ip_network)
S3method(vec_cast.ip_address,character)
S3method(vec_cast.ip_address,default)
S3method(vec_cast.ip_address,ip_address)
S3method(vec_cast.ip_network,character)
S3method(vec_cast.ip_network,default)
S3method(vec_cast.ip_network,ip_network)
S3method(vec_proxy_compare,ip_address)
S3method(vec_proxy_compare,ip_network)
S3method(vec_ptype2,ip_address)
S3method(vec_ptype2,ip_network)
S3method(vec_ptype2.character,ip_address)
S3method(vec_ptype2.character,ip_network)
S3method(vec_ptype2.ip_address,character)
S3method(vec_ptype2.ip_address,default)
S3method(vec_ptype2.ip_address,ip_address)
S3method(vec_ptype2.ip_network,character)
S3method(vec_ptype2.ip_network,default)
S3method(vec_ptype2.ip_network,ip_network)
S3method(vec_ptype_abbr,ip_address)
S3method(vec_ptype_abbr,ip_network)
export(hostmask)
export(ip_address)
export(ip_network)
export(is_ip_address)
export(is_ip_network)
export(is_ipv4)
export(is_ipv6)
export(is_subnet)
export(is_supernet)
export(is_within)
export(is_within_any)
export(netmask)
export(network_address)
export(prefix_length)
export(vec_cast.ip_address)
export(vec_cast.ip_network)
export(vec_ptype2.ip_address)
export(vec_ptype2.ip_network)
import(vctrs)
importFrom(Rcpp,sourceCpp)
importFrom(methods,setOldClass)
useDynLib(ipaddress, .registration = TRUE)
