% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary.R
\name{binary}
\alias{binary}
\alias{as_binary}
\alias{from_binary}
\title{Encode or decode address as binary}
\usage{
as_binary(ip)

from_binary(bits)
}
\arguments{
\item{ip}{An \code{\link{ip_address}} vector}

\item{bits}{A character vector containing only \code{0} and \code{1} characters}
}
\description{
\code{as_binary()} encodes an \code{ip_address} vector to a character vector of bits

\code{from_binary()} decodes a character vector of bits to an \code{ip_address} vector
}
\details{
The bits are stored in network order (also known as
big-endian order), which is part of the IP standard.

IPv4 addresses use 32 bits, IPv6 addresses use 128 bits,
and missing values are encoded as \code{NA}.
}
\examples{
x <- ip_address(c("192.168.0.1", "2001:db8::8a2e:370:7334", NA))
as_binary(x)

from_binary(as_binary(x))
}
\seealso{
Use \code{packed()} and \code{unpack()} to encode/decode raw bytes.
}
