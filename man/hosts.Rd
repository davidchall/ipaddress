% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hosts.R
\name{hosts}
\alias{hosts}
\alias{seq.ip_network}
\title{List addresses within a network}
\usage{
\method{seq}{ip_network}(x, ...)

hosts(x)
}
\arguments{
\item{x}{An \code{\link{ip_network}} scalar}

\item{...}{Included for generic consistency}
}
\value{
An \code{\link{ip_address}} vector
}
\description{
\code{seq()} returns \emph{all} hosts

\code{hosts()} returns only \emph{usable} hosts
}
\details{
In IPv4, the unusable hosts are the network address and the broadcast
address (i.e. the first and last addresses in the network).
In IPv6, the only unusable host is the subnet router anycast address
(i.e. the first address in the network).

For networks with a prefix length of 31 (for IPv4) or 127 (for IPv6),
the unusable hosts are included in the results of \code{hosts()}.

The \code{ipaddress} package does not support \link[base:LongVectors]{long vectors}
(i.e. vectors with more than 2^31 - 1 elements). As a result, these two
functions do not support networks larger than this size. This corresponds
to prefix lengths less than 2 (for IPv4) or 98 (for IPv6). However, you
might find that machine memory imposes stricter limitations.
}
\examples{
seq(ip_network("192.0.2.0/30"))

seq(ip_network("2001:db8::/126"))

hosts(ip_network("192.0.2.0/30"))

hosts(ip_network("2001:db8::/126"))
}
\seealso{
To get the IP address range of a network without generating all addresses,
use \code{\link[=network_address]{network_address()}} and \code{\link[=broadcast_address]{broadcast_address()}}.

Use \code{\link[=sample_ip]{sample_ip()}} to randomly sample addresses.
}
