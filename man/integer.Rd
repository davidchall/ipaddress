% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary.R
\name{integer}
\alias{integer}
\alias{as_integer}
\alias{from_integer}
\title{Represent address as integer}
\usage{
as_integer(x)

from_integer(x)
}
\arguments{
\item{x}{An \code{\link{ip_address}} vector or character vector}
}
\value{
\itemize{
\item \code{as_integer()} returns a character vector
\item \code{from_integer()} returns an \code{\link{ip_address}} vector
}
}
\description{
\code{as_integer()} and \code{from_integer()} encode and decode an \code{\link{ip_address}}
vector to a character vector of integer.
}
\details{
The bits are stored in network order (also known as big-endian order), which
is part of the IP standard.

IPv4 addresses use 32 bits, IPv6 addresses use 128 bits, and missing values
are encoded as \code{NA}.
}
\examples{
x <- ip_address(c("192.168.0.1", "2001:db8::8a2e:370:7334", NA))
as_integer(x)

from_integer(as_integer(x))
}
\seealso{
Use \code{as_packed()} and \code{from_packed()} to encode/decode raw bytes.
}
